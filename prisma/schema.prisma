// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
enum DownloadStatus {
  PENDING
  DOWNLOADING
  SENDING
  COMPLETED
  FAILED
  SENT
}
generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String
  phone     String @unique
  country   String
  platform  String
  stickers  Stickers[]
  downloads Downloads[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

}

model Downloads {
  id          String   @id @default(uuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  platform    String
  urlFromUser String
  sentAt      BigInt
  status      DownloadStatus     @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  

  Errors Errors[]
}

model Stickers {
  id        String   @id @default(uuid())
  userId    String
  sentAt    BigInt
  body      String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Errors {
  id        String   @id @default(uuid())
  error     String
  downloadId String
  download   Downloads @relation(fields: [downloadId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}