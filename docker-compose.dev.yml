version: '3.8'

services:
  whatsapp-wizard-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: build-deps
    container_name: whatsapp-wizard-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-whatsapp123}@postgres:5432/${POSTGRES_DB:-whatsappwizard}?schema=public
      - REDIS_URL=redis://redis:6379
      - BOT_TOKEN=${BOT_TOKEN}
      - CHAT_ID=${CHAT_ID}
      - POSTHOG_API_KEY=${POSTHOG_API_KEY:-}
      - POSTHOG_HOST=${POSTHOG_HOST:-}
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nodemon.json:/app/nodemon.json
      # Persist data
      - whatsapp_sessions_dev:/app/BTA
      - whatsapp_dev_sessions_dev:/app/DEV
      - whatsapp_media_dev:/app/public
      - whatsapp_logs_dev:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - whatsapp-network-dev
    command: ["npm", "run", "dev"]

  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-wizard-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-whatsappwizard}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-whatsapp123}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - whatsapp-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-whatsappwizard}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: whatsapp-wizard-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_dev:/data
    ports:
      - "6379:6379"
    networks:
      - whatsapp-network-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: whatsapp-wizard-redis-commander-dev
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - whatsapp-network-dev

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: whatsapp-wizard-pgadmin-dev
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@whatsappwizard.local}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - whatsapp-network-dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  whatsapp_sessions_dev:
    driver: local
  whatsapp_dev_sessions_dev:
    driver: local
  whatsapp_media_dev:
    driver: local
  whatsapp_logs_dev:
    driver: local
  pgadmin_data_dev:
    driver: local

networks:
  whatsapp-network-dev:
    driver: bridge
